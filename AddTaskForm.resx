<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAAWGgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAABnQSURBVHja7Z17cFTXfcfNo6mHmQYb/oiZaYN2FyMFzDQQnk5NauLapM6404S2ExqM
        GUrGGNEUkGwQAgkhyS/8wsREyFiOY6htwIBdGpTUQkIPEKAHEhJI6MlLAklIWgFCz9vfWa6cNaxWu3fv
        Pfece79n5jP2YCPdx/l+du+55/zOfYqi3AfkJeI9ZTjhIOYTi4lIYh2RTGwl0oi9RDqRR5QStUQz0aXS
        rP5Zqfr/pKt/J039Gcnqz4xUf8d89XcOxz2QG1wEeYI+mphJLCISiT1ECdFJKCbRqR7DHvWYFqnHOBr3
        DAIA2oI+kphNrCZ2EFlEo4kh10qjeuw71HNh5zQS9xgCAPd+hZ9KrCEOEW4Jwx4obvUc16jnjEcICMCW
        oZ+kPk/vI1osHPihaFGvAbsWk9A3IACrBn4csYzYTTTYOPBD0aBeI3atxqHvQAAyh34UsZA4TPQi3EHT
        q147dg1HoU9BADKEfhjxuPr6zI0Q6zp2kKZe22HoaxCAaMEPJ5KIeoTVcOrVax2OvgcBmBn6scQKIh+h
        NI189R6MRZ+EAHgF30WkqjPoEEIx6FLviQt9FAIwKviTiV0Y0BN+4JDdo8nosxCAXsGfTuwn+hEwaehX
        79l09GEIQGvw56qLYhAouWH3cC76NAQQaPDZSrdsBMdysHs6H30cAhgs+POIAgTF8rB7PA99HgIYCP5D
        6sARwmEv2D1/CAKwb/BHECuJdoTBtrSrfWAEBGCv8M8iChEAoML6wiwIwPrBH0Ok4JUeGOTVIesbYyAA
        ay7SWUI0oaODIWhS+8owCMAa4Z9C5KBjgyBhfWYKBCB3+CMxZx+EuMYgEgKQL/gPqKWm0ImBHrC+9AAE
        IEf4ZxA16LRAZ1ifmgEBiB3+VUQ3OiswCNa3VkEA4gX/QeIgOijgBOtrD0IAYoR/DkpxAZNKk82BAMx9
        tx9N9KAzApPoUfvgMAiAb/jvxyg/EOwtwf0QAL9NMjPR6YBgZMq4KaqMS3eL0dmAoBTLtsRYpvBPwPt9
        IMl8gQkQgL7hn0ZcRecCksD66jQIQL9SXdhmC8i4ndk8CCC08C8gbqMzAUlhfXcBBKAt/MuJPnQiIDms
        Dy+HAIILfww6DrAYMRBA4J/86DDAiiyHAIZ+5sfXfmDlx4EFEMDgo/0Y8AN2GBicBwHc+54fr/qAnV4R
        ToMA/jzDD5N8gB0nC02wtQDUuf2Y3gvsPG34IVsKQF3Vh4U9AAuITFxFaOZ6fizpBeDPS4nvt4UA1Eo+
        KOYBwL1FRYbZQQDRuNkA+CTa0gJQC3iihh8Ag9cYnGNJAUTcKd2N6r0ADF1t+EErCgB1+wEIjIOWEkDE
        nR17cGMBCJxVlhBAxJ29+rBdFwDBwTIzQ2oBRNzZpRcz/QDQPlPwAZkFgPf9AIQ4P0BKAdCBR+LmAaAL
        kVIJgA54CtGFGweALrAsTZFCAOpU3xzcNAB0JceIqcJGCGAJbhYAhrBEaAHQAY4hmnCjADAElq0xIgsg
        BTcJAENJEVIAdGCziH7cIAAMhWVsllACoAMaQRSKcpGmbO9Tlu51A4uyeI9bidjWY2cJsKyNEEkAK0W6
        QD/c2a2gWbclHDyvhMWcUMK3ddtZAiuFEEDEncKe7RAAGo/2Sf4V5btrMjzYXALtehQU1UMAu0S7OBCA
        Ndvx6lbF+eKRrwUACSi7TBVAxJ3dfBQIAM3odqGlU/n+xuxvhD8QCXw/pU/ZkdeqTN9h2TGDeWYKoAAC
        QDO63bjdqzzxer7P8A8lgS9K2zw/o6apU/nJR51WFECBKQKgXzxf1IsCAVin9fX3K8+9f9pv+AeTwFuZ
        1+8RyQsH2q0ogflmCCAbAkAzuiV+WRVQ+O+WQOSBNoXccU9jf7Ytu1WZtL3fSgLI5ioA+oVzRb4gEIA1
        2mcnGoIK/wBPv1uq3Oru8/uzj1S4lRmplhoXmMtTAOkQAJqR7URNm+J6MTPo8P8gPke53Ho7oN9R29yp
        PP37W1YRQDoXAdAvmi76xYAA5G6XrncqU+Oygw7/hJcylcK69uAGGLt6lciDlhkXmM5DAPshADQjR/yf
        3JKv6av//oJGzb93e64lxgX2GyoA+gWTZVjwAwHIO+K/9IMSTeF/9VB1yL8/s1L6cQGWzclGCmCXDBcC
        ApCzvfw/VZrC/x8kDV8j/lpaXXOn8tOPb9lmdmAw4XcRvRAAmhFt70ltI/5PbTnheWzQs93s6lV+fbBN
        VgGwjLqMEECqLBchFAE0tN1Wdh69CDiy7as6zwBesOGfGpfjGTA0qqXktSqT5RwXSNVVAPQDx8pU5TcU
        ARyratX0SQT4wl4RnqptM/ybSXaVW5n5vnSLjVhWx+opgBUyXQAIwPrsoUcGXu1sw00lYutN2SSwQk8B
        5EMAQBSSvqziFn42uLgsrVQZ/2KOMvEdqSSQr4sA6AeFy/YMBAFYlyU7T3teF/Jqb6XXfv27JZRAuB4C
        SIIAgAj8w+v5uo/4+2vpZ5qU8VHfPAbJJJAUkgDUXX7qIQBgNqwYCCsKwqtVNt5QvheT5fNYJJJA/VC7
        CQ0lgMdlfBcKAVhvxD+/ppVb+Ntv9Sg/evmY32OSSAKPhyKANAgAmA0rBMpzOvKzqcUBHZckEkjTJAD6
        i6MINwQAzISVAOfZkoOcjiyBBFiGR2kRwEJZ50NDANbg2dTTSm8fvxH/g0VXNR2nBBJYqEUAhyEAYBbz
        XjuudHT2cAv/mUsdSvjaLM3HK7gEDgclAPoL42RZ+AMBWI+/3ZCt1DXf4hb+5o5uZU5iXsjHLbAEWJbH
        BSOAZTIXRoAA5IVt/MHuAa/WQ48Y//peoW7HL7AElgUjgN0QADCDXccucx302/B5pe7nIKgEdgcjgAYI
        APBm4/5KruH/1GufQRtIoCEgAdD/OEn24ogQgHz8MqWY64g/Kx6qpQaB5BKYFIgAIiEABJInf//Kcc/s
        O17tanuXMn1TDpdzE0wCkYEIYB8EgFDyYkrsUaWmid+If1dPn/JPW09xPUeBJLDPrwDofxhOtEAACCaX
        Ef/oI0pO5XWuz/1Rn5415VwFkQDL9nB/AphqhQ0SIAA5+F3uJa7h/zDnoqnnK4gEpvoTwBoIAALgwfp9
        FVzDz+4r+8Zh9nkLIIE1/gRwCAKAAIzmF78t8kzA4dW0bjVmUQkc8ikA+g8jZV39BwHIA1tn38ZxxL+z
        u0/5yZsnhLsOJkqAZXykLwHMtspWySIKgJWWYtNc7Rz+yeuPKtXXbnL96h/5+zPCXg8TJTDblwBWQwDG
        CICF/6PcS8pX5c2GTz4RFQc9f2dVtHAN//aMeuGvi0kSWO1LADsgAP0FMBD+gZZ5rkV52IYS+CD7Itfw
        HznbooRFyfGNywQJ7PAlgCwIQF8B3B3+gcbefYey9lw21u45xzX8tU23lEdij0p1jThLIMuXABohAP0E
        MFj4vX/PYFVnrQRbatvTy2/En5UN//Fr+VJeK44SaPyGAOgPRlsl/CIIYKjwD7STtW2WlsDfJR9Trt/k
        t1Mz2y+EbRUu8zXjKIHR3gKYCQHoI4BAw//1qrT6ds/ouNXCP4nOidXW59neTK+xxLXjJIGZ3gJYBAGE
        LoBgwz/QSi66PYtirBJ+NviWUd7MNfyHS+/dxQcS8MsibwEkQgChCUBr+Ada2eUOz+43Vui8OzIvcA1/
        RcMNSz5KGSyBRG8B7IEAtAsg1PAPtHPUkafG5UjdadlqO56NzSqcO8QuPpCAT/Z4C6AEAtAmAL3CP9DO
        N95UfhAvpwQWbCtUunv7uIWfVRBatKPY8m9SDJJAiUcAag2ATgggeAHoHf6BxqbLzkzIlaqTPpqU5ymv
        zbMlfVllm7kUBkiAZX44E4DDSuHnJQCjwj/QWF382ZvzpOic7PmbPb7wbAcKG203m9IACTiYAOZDAMEJ
        wOjwD7SLLZ2eT1bRR/z/VNbENfyll9zKxLX2XFOhswTmMwEshgACFwCv8A+0y623lceSxR3kYgtueDb2
        mCHLNyMJJLDYElWAeQrgPc4dnrWGttueyrmidcRV/13O9TqwKcX/8ptCW4dfZwlEMgGsgwACF8CTW/K5
        D3axds3dJdQc939+t8BTYZdni/28AuHXVwLrmACSIYDgxgDMkkBzR5fnd5vd8dhXcHYsPNsnBu7iY2MJ
        JDMBbIUAgn8LYJYE2OKa+W+YV+IqYl2WUn65g+s5F9S1Ka4XMxF4/SWwlQkgDQLQNg/ALAmw2W8/ffsk
        /44WleGZc8+zNbbfDmkXn3mvHYcEBieNCWAvBKB9JqBZEnB39nDf4ebd/6vjeo6eXXze0X6Orxyq9oBv
        AoOylwkgHQIIbS2AWRJgxS9+9m4Bl871n7vKuJ9f1Cfad/FZllbiqQ9gJwFokEA6E0AeBBD6akCzJHCz
        q9dTdcfITsU+hW9zHvFPy9a+i89Tb5zwXBfW7CaAICWQxwRQCgHoUw/ALAnc6u71bLZhRGealZDreQXJ
        s+Wdv655F59p8TnK5dbOr3+WHQUQhARKmQBqIQB9BGCmBNgn9LOp+q6MY4VLz1ziO+LPdvHRWheBlVwv
        rGv/xs+zqwAClEAtE0AzBKCfAMyUABs0W7LztG4j/odOX+P+TSaUV5z7Cxrv+Zl2FkAAEmhmAuiCAPQV
        gJkSYNNl2QBYqMf/9h9ruR/7ihB28Xntf6t9/ky7C2AICXRBAAYJwFQJ9PUryz/SHiYWRN7tN1/VaT7e
        X31Y6hnxhwCClkAXHgEMFICZEmDVclZ+XBb08bIJRmxDTZ7tyNlmzbv4sI0/B0b8IYCgJdCMQUCDBWCm
        BProY5Gt2Av0OGdsyvXMvOPZakLYxYeVTrvS5v94IQC/EqjFa0AOAjBbAtGfDj2hhhXYOH3BzX0ik9ap
        umx/RbanwlANAvArgVJMBOIkADMlwJ6PY/b6X0r7RdFV7se0NIRdfFhJsEAaBOBHAm+5izAVmKMAzJQA
        a3H7K30e0xuHa7gfy5bD2nfxef0PgR8vBOBHAmuPu7EYiLMAzJbA5i/Of+NYnv/d4CPoRrU/lFzTvItP
        sMcLAfip57guvxnLgU0QgNkSGAgFG0Fnk294tnMh7OLzj2+eDPp4IQA/AlhfUI+CICYJwGwJpBypH3IE
        Xe/G6hhoLXDKagI0aDheCGBwHBuKS1ESzEQBmC0B3vMS/j1F21oF9oai+EJ7SN92gA8BxJ3JRlFQkwVg
        FwncPfYQDP+1W3v1YQhgcJybzh1AWXABBGB1CbBFOqFcmzWfQABG4EqsTsXGIIIIwKoSKLkY+i4+EIBB
        Aki+kIStwQQSgNUkwEqHz94c+ianEIAxTHi1YSk2BxVMAFaRAFuWzLYL1+N6QADG8PDrTVOwPbiAArCC
        BNbv028XHwjAAKIyFc/24HSNmARKIACxBCCzBNjmqXpeBwjAgGnAL+WyjnXfgAD2QADiCUBGCXxV3qw4
        NBb0hAA4zgJce7zFWwCJEICYApBJAqWX3J6tw/Q+fwjAkGnApd4CWAQBiCsAGSTAqvmyAh1GnDsEYMAs
        wI0lu70FMBMCEFsAIkug/VaPoVuXQwAGzAKMP/uCtwBGQwDiC0BECXT39in/tr3I0HOGAAwQQEJl2NcC
        UCXQCAGILwDRJPDr3WWGny8EoPsbgN6B3HsLIAsCkEMAokiAVebhca4QgM7P/7FFzb4EsAMCkEcAZkvg
        0/wr3M4TAtD9+f+ULwGshgDkEoBZEsiqaNG8eScEIMAioKTanb4EMBsCkE8AvCVQfqVDc0kvCECURUCN
        z/gSwEjCDQG0SnlTeUiAleSamZDL/dwgAD3LgWf3s6zfIwBVAocggFZpb66REmCbeDy15YQp5wUB6DgD
        MOZUk3fm7xbAGgigVeobbIQE2Gajv9RYzw8CEK4QaIY/AUyFAFqlv8l6SyAqgK3FIABZBHB6lT8BsNoA
        LRBABiSgtq1/qjX9XCAA/WoAjF977NuDCkCVwD4IIAMSoPb5qUYhzgMC0Ov5/2Tj3Xn3JYBICCDD9hLI
        O39dcb2YCQFYagJQ2Z5ABDAJAsiwtQQqG28oj8QeFeb4IQC9JgDVPTmkAFQJNEAA9pTANXeXMicxT6hj
        hwD02An4WI+vrA8mgN0QgP0kcLOrV3n6rZPCHTcEoMc2YGVngxHAMgjAXhJge/c99/5pIY8ZAtBjE5D6
        LcEIYBzRCwHYRwJ6lvGGAAT7+h99VAl/59bfBCwAVQKHIQB7SGB7Rr3QxwoBhLz+v2GwnPsTwEIIwPoS
        YDX8x0dlQACWfv1Xvl2LAEbJujoQArAWEEDIFYC/G7QAVAmkQQAAApB59t+Jy/4yPpQAHocAAAQg9eu/
        jaEIYBhRDwEACEDK4h+9YTEn/0KzAFQJJEEAAAKQ8dm/NHeofAcigHAIAEAAUhb//HHIAlAlkA8BAAhA
        osG/9QVtgWQ7UAGsgAAABCDRp//m6lQ9BTCW6IIAAAQgw+BfTv/Et298RzcBqBJItYMAWOnrnUcvAoE4
        WtECAQRX+KMo0FwHIwCXLAuEQhEAmrWa/QRwRHEl1vxIdwGoEtgFAaBBAELX/bsSTKaDFcBkoh8CQIMA
        hC37/bxhAlAlsB8CQIMABPz0X5ffEmyetQhgOgSABgEIuex3ueECUCWQDgGgQQBCPfu3aMmyVgHMhQDQ
        IACRJv6cf4GbAFQJZEMAaBCAENN+r2vNcSgCmA8BoEEAIlT8rVvJXQCqBAogADQIwNTtvltDyXCoApgH
        AaBBAObN+puQfGGpaQJQBJ0dCAGg2UEAjtiiulDzq4cAHiLaIQA0CIDvp78zruxR0wWgSmAlBIAGAXD9
        9M/QI7t6CWAEUSiKAKZs71MWf1ihPJtaDGzOD5PyrLfe/6XcrrD1BX8ljABUCcwSaaFQ+LZuVhMdBTWA
        Faf8rtQrt7oJQJVAikiPApAAsOBX/wo9M6u3AMYQTZAAAIbU+e9zJVa7hBWAKoElor0WhASAJb76J1T8
        Vu+8GiEAtptQDiQAgI7z/WMLW1i2hBeAKoEpIlYRhgSAlERnKRNeufSEEVk1RACqBCJFnCYMCQAJR/0/
        MyqnhglAlcA+SACAkMp8NdM/h8kqgAeIGkgAAA2j/tFZfY4NxdOMzKihAlAlMIPohgQACHp339VG59Nw
        AagSWCVq8RBIAAha3judRza5CECVwEFIAIBASnydukr/HG41ATxI1EMCAPhb6JPX49pc5eSVS24CUCUw
        h+iBBADwQVSm4kqsXswzk1wFoEogWuSS4pAAMG+qb+UnvPNohgCGiTo/ABIAJo74Vxsx1Vc4AagSuJ/I
        hAQA8Ez2aZ/w8sVvm5FFUwSgSmA0UQwJAHsv8c3pdsSdiTArh6YJwKugaA0kAGy6vr/XEVf6mJkZNFUA
        qgQmEFchAWCvab5H+53x5c+YnT/TBaBKYBrhhgSAPV73ZfU7N517ToTsCSEAr12GbkMCwOrv+p0JlWtE
        yZ0wAlAlsIDogwSANcN/hIX/ZZEyJ5QAVAksF1kAkADQvJPP5vPvi5Y34QSgSiAGEgAWm+W3T8SsCSkA
        r28CeBwA8oc/ruwzUXMmrAC8xgQwMAhkXtf/gcgZE1oAXm8H8IoQSDfa74grixc9X8ILwGueACYLAWl2
        8BHlPb8lBOA1YxDThoHoBT26XZurnpAlV9IIwGvtABYQATFX9cWcuOlKqp0sU6akEoDXKkIsJQZiDfbF
        FjVNePXKd2TLk3QC8KongKIiQIzwx505P/Et9ygZsySlALwqC0WjxiAwdXZffPkXZlTysb0A7io0imrD
        gP9If3zZatnzI70AvEqOY98BwGmw7+Q156az4VbIjiUEcNcORNiGDBi2mo+e9780crNOCECfvQixISnQ
        /f2+M6HyOavlxXIC8NqVGFuTA53m8xdfcCXX/7UVs2JJAXiJIJLoggSAJqKzFGdCxUdWzoilBaBKYAqR
        AwmA4Gr1H+9wJdU+bfV8WF4AXnMGlhBNkAAYqmCnY8PpfePXHvtLO2TDFgLwEsEYIoXohwTAvdtyF1Y5
        48sfsVMmbCUALxHMIgohAeAJ/trjt5ybzj1vxyzYUgCqBEYQK4l2SMDWm3N85kqs+ZZdc2BbAdy1xHgX
        JGCvOfyOjSWVruT679m9/9teAHeVHiuABCw/jbfDlVT3K/R5CGAwEcwnsiEByz3nd9DX/UT0cQggUBHM
        JdIhAemr9Fx3bjobhT4NAWgVwXRivxmvDiGBUF7pFVxxJlQsQR+GAPQSwWR1sLAXEhB4td6G4hrX5qpn
        0GchAKNE4CJSea4xgAQCqMG/seSMK6n2MfRRCICXCMYSK4h8SMC0JbqdFPwv6RN/IvokBGCmDMKJJKNL
        k0ECnlJcvY4Np/Od8eU/R9+DAERcdPQ4kWbUdma2lEB0Vr8jtqjKuelcVFhs4Uj0NQhABhmMIhYSh/Ue
        OLSFBKKOsJH8axT6ra6kurHoUxCAzDIYRywjdhMNkMCgc/P7wtafukRf7z92JV+YhL4DAVhVCJPUakWs
        bFmLXSXAFuOw9/WOuDOf0yf9Avqz4egfEIDdZDCcmEqsIQ4FO3YgkwTUwF91xpd94Uw4/wtXYg2e5yEA
        cJcQRhKzidXEDiKLaJRNAp6v8+vy2x2xRRUU+AOuxOrFD7929Vu4xxAA0L4p6kxiEZFI7CFKiE7TJBCV
        yRbZdIbFFl50bCzNccafTXEmVC51JlQ4cM8gAMDvEcLBVjFOfPvGC/Q8vZ/C+BV7V+7YUFzqiC2sZs/Z
        YTEnW+gTuWP82mO3x7+U28O+jrORdgb7d8+f0X8LW3fCHRZzqjlsfeFl9uqNfk6JY2PJMfq5f3TGle11
        xpe/T1/f17qSah+lT/QRuAdy8/81rRO8CTGAAgAAAABJRU5ErkJggg==
</value>
  </data>
</root>